# Generated by Django 4.1.6 on 2023-02-25 15:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=100)),
                ('Email', models.CharField(max_length=100, null=True)),
                ('Phone', models.CharField(max_length=100, null=True)),
                ('Avatar', models.ImageField(blank=True, null=True, upload_to='upload/AdminInformation')),
                ('Brand_Name', models.CharField(blank=True, max_length=100, null=True)),
                ('Main_Color', models.CharField(blank=True, max_length=100, null=True)),
                ('Active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='BankInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Account_Name', models.CharField(blank=True, max_length=100)),
                ('Account_Number', models.CharField(blank=True, max_length=100, unique=True)),
                ('Bank_Name', models.CharField(blank=True, max_length=100, unique=True)),
                ('Short_Name', models.CharField(blank=True, max_length=100, unique=True)),
                ('QR_Code_Link', models.CharField(blank=True, max_length=100, unique=True)),
                ('Main_Color', models.CharField(blank=True, max_length=100)),
                ('Background_Color', models.CharField(blank=True, max_length=100, null=True)),
                ('Avatar', models.ImageField(blank=True, null=True, upload_to='upload/Bank')),
                ('Api_Key', models.CharField(blank=True, max_length=500, null=True)),
                ('Code_Api_Key', models.CharField(blank=True, max_length=100, null=True)),
                ('Active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CategoryProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, unique=True)),
                ('Name_English', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('Avatar', models.ImageField(null=True, upload_to='upload/CategoryProduct')),
                ('Create_Date', models.DateTimeField(auto_now_add=True)),
                ('Up_Date', models.DateTimeField(auto_now=True)),
                ('Active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CryptoInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Crytop_Name', models.CharField(blank=True, max_length=100)),
                ('Short_Name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('Avatar_Logo', models.ImageField(blank=True, null=True, upload_to='upload/Crypto')),
                ('Wallet_Address', models.CharField(blank=True, max_length=100, unique=True)),
                ('Exchanges', models.CharField(blank=True, max_length=100, unique=True)),
                ('Avatar_QR_Code', models.ImageField(blank=True, null=True, upload_to='upload/Crypto')),
                ('Active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Money', models.IntegerField(default=0)),
                ('Total_recharge_money', models.IntegerField(blank=True, default=0, null=True)),
                ('Total_amount_deducted', models.IntegerField(blank=True, default=0, null=True)),
                ('Avatar', models.ImageField(blank=True, null=True, upload_to='upload/User')),
                ('OTP', models.CharField(blank=True, max_length=10, null=True)),
                ('Two_factor_authentication', models.CharField(blank=True, default='OFF', max_length=200, null=True)),
                ('Password_Level_2', models.CharField(blank=True, max_length=10, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PersonalTransactionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Content', models.CharField(blank=True, max_length=200, null=True)),
                ('Code_Orders', models.CharField(blank=True, max_length=200, unique=True)),
                ('Transaction_Time', models.DateTimeField(auto_now_add=True)),
                ('Payment_Amount', models.CharField(blank=True, max_length=200)),
                ('Buy_Data', models.TextField(blank=True, null=True)),
                ('Status', models.CharField(blank=True, max_length=200, null=True)),
                ('Active', models.BooleanField(default=True)),
                ('User_Link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userlink', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ListProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, unique=True)),
                ('Name_English', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('Information', models.TextField()),
                ('Data_Txt', models.TextField(blank=True, null=True)),
                ('Price', models.IntegerField()),
                ('Nation', models.ImageField(null=True, upload_to='upload/ListProduct')),
                ('Create_Date', models.DateTimeField(auto_now_add=True)),
                ('Up_Date', models.DateTimeField(auto_now=True)),
                ('Active', models.BooleanField(default=True)),
                ('Category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Categoryy', to='Data_Interaction.categoryproduct')),
            ],
            options={
                'ordering': ['id'],
                'unique_together': {('Name', 'Category')},
            },
        ),
    ]
